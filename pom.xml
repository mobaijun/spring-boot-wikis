<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--name 是项目的名称，不用特别严谨。而 artifactId 是用来区分
    group 下面的子项目的，需要保证严格唯一。
    一般情况下将 artifactId 和 name 设置成一样的就可以了。-->
    <!--项目名称-->
    <name>spring-boot-wikis</name>
    <!--机构标识-->
    <groupId>com.mobaijun</groupId>
    <!--项目标识-->
    <artifactId>spring-boot-wikis</artifactId>
    <packaging>pom</packaging>
    <version>1.0.1</version>

    <!-- 依赖的子模块 -->
    <modules>
        <module>spring-boot-xss</module>
        <module>spring-boot-thymeleaf</module>
        <module>spring-boot-thread</module>
        <module>spring-boot-security-jwt</module>
        <module>spring-boot-restful</module>
        <module>spring-boot-actuator</module>
        <module>spring-boot-aliyun-oss</module>
        <module>spring-boot-cors</module>
        <module>spring-boot-design-patterns</module>
        <module>spring-boot-file-size</module>
        <module>spring-boot-flyway</module>
        <module>spring-boot-freemarker</module>
        <module>spring-boot-hello</module>
        <module>spring-boot-influxdb</module>
        <module>spring-boot-jdbctemplate</module>
        <module>spring-boot-jsp</module>
        <module>spring-boot-mybatis-plus</module>
        <module>spring-boot-mysql-redis</module>
        <module>spring-boot-profile</module>
        <module>spring-boot-rabbitmq</module>
        <module>spring-boot-redis</module>
    </modules>

    <!--这一段配置代码，指定使用 Spring Boot 2.6.0.RELEASE 版本 。
    如果我们要更换 Spring Boot 版本，只需要修改 <version></version> 标签中间的版本号部分即可。-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <!-- lookup parent from repository -->
        <version>2.7.0</version>
        <relativePath/>
    </parent>

    <!--项目的简单描述-->
    <description>Spring Boot Wikis</description>
    <url>https://www.mobaijun.com</url>


    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <mica.version>2.6.0</mica.version>
        <swagger.starter.version>3.0.0</swagger.starter.version>
        <mybatisplus.version>3.4.3</mybatisplus.version>
        <springboot.version>2.7.3</springboot.version>
        <jackson.version>2.10.1</jackson.version>
        <influxdb.version>2.15</influxdb.version>
        <hutool.version>5.8.5</hutool.version>
        <aliyun-oss.version>3.12.0</aliyun-oss.version>
        <swagger.version>2.9.2</swagger.version>
    </properties>


    <!--接下来，这一段代码配置，负责指定 Spring Boot 项目中需要的依赖。
    Spring Boot 有一些起步依赖，形如 spring-boot-starter-xxx 的样式。起步依赖整合了很多依赖项，后续我们慢慢了解即可。-->
    <dependencies>
        <!-- actuator 依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${springboot.version}</version>
        </dependency>

        <!-- 引入web项目相关依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${springboot.version}</version>
        </dependency>

        <!--相关插件-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- 测试 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${springboot.version}</version>
            <scope>test</scope>
        </dependency>


        <!-- apache 工具包 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!--  热启动 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <!-- hutool-all 工具包 -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>
    </dependencies>

    <!--最后的这一段代码配置，指定了一个插件，用来构建、运行、打包 Spring Boot 项目。-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <!--这里配置了maven的远程仓库地址-->
    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>
</project>